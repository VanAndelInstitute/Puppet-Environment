[ClassVersion("1.0.0.0"), FriendlyName("xSCOMManagementServerSetup")]
class MSFT_xSCOMManagementServerSetup : OMI_BaseResource
{
    [Key, Description("An enumerated value that describes if the OM management server is expected to be installed on the machine.\nPresent {default}  \nAbsent   \n"), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Required, Description("UNC path to the root of the source files for installation.")] String SourcePath;
    [Write, Description("Folder within the source path containing the source files for installation.")] String SourceFolder;
    [Required, EmbeddedInstance("MSFT_Credential"), Description("Credential to be used to perform the installation.")] String SetupCredential;
    [Write, Description("Product key for licensed installations.")] String ProductKey;
    [Write, Description("Installation path for the software.")] String InstallPath;
    [Required, Description("The name of the management group.")] String ManagementGroupName;
    [Required, Description("Is this the first Management Server?")] Boolean FirstManagementServer;
    [Write, Description("Change the Management Server port on install.")] UInt16 ManagementServicePort;
    [Write, EmbeddedInstance("MSFT_Credential"), Description("The domain and user name of the Management server action account.")] String ActionAccount;
    [Read, Description("Output username of the Management server action account.")] String ActionAccountUsername;
    [Write, EmbeddedInstance("MSFT_Credential"), Description("The domain and user name of the Data Access service account.")] String DASAccount;
    [Read, Description("Output username of the Data Access service account.")] String DASAccountUsername;
    [Required, EmbeddedInstance("MSFT_Credential"), Description("The domain and user name of the data reader account.")] String DataReader;
    [Read, Description("Output username of the data reader account.")] String DataReaderUsername;
    [Required, EmbeddedInstance("MSFT_Credential"), Description("The domain and user name of the data Writer account.")] String DataWriter;
    [Read, Description("Output username of the data writer account.")] String DataWriterUsername;
    [Required, Description("The SQL server and instance.")] String SqlServerInstance;
    [Write, Description("The name of the Operational database.")] String DatabaseName;
    [Write, Description("The size in MB of the Operational database.")] UInt16 DatabaseSize;
    [Required, Description("The data warehouse server and instance.")] String DwSqlServerInstance;
    [Write, Description("The name of the data warehouse database.")] String DwDatabaseName;
    [Write, Description("The size in MB of the data warehouse database.")] UInt16 DwDatabaseSize;
    [Write, Description("0: Do not opt in to Microsoft Update. 1: Opt in to Microsoft Update.")] UInt8 UseMicrosoftUpdate;
    [Write, Description("0: Do not opt in to the Customer Experience Improvement Program (CEIP). 1: Opt in to CEIP.")] UInt8 SendCEIPReports;
    [Write, Description("Never: Do not opt in to sending automatic error reports. Queued: Opt in to sending error reports, but queue the reports for review before sending. Always: Opt in to automatically send error reports."), ValueMap{"Never","Queued","Always"}, Values{"Never","Queued","Always"}] String EnableErrorReporting;
    [Write, Description("0: Do not opt in to sending operational data reports. 1: opt in to sending operational data reports.")] UInt8 SendODRReports;
};
